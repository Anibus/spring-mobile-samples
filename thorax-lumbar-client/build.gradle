apply plugin: 'eclipse'
apply plugin: 'war'
apply plugin: 'eclipse-wtp'
apply plugin: 'tomcat'

springVersion = '3.1.2.RELEASE'
springMobileVersion = '1.0.0.RELEASE'
mockitoVersion = '1.8.5'
tomcatVersion = '7.0.11'

configurations {
    all*.exclude group: 'javax.mail'
    all*.exclude group: 'javax.jms'
    all*.exclude group: 'com.sun.jdmk'
    all*.exclude group: 'com.sun.jmx'
}

dependencies {
	compile ("org.springframework:spring-context:$springVersion") {
		exclude module: 'commons-logging'
	}
	compile "org.springframework:spring-webmvc:$springVersion"
	compile "org.springframework:spring-tx:$springVersion"
	compile "org.springframework:spring-jdbc:$springVersion"
	compile "org.springframework.mobile:spring-mobile-device:$springMobileVersion"
	compile "cglib:cglib-nodep:2.2"
	compile "org.slf4j:slf4j-api:1.5.10"
	compile "org.slf4j:jcl-over-slf4j:1.5.10"
	compile "org.slf4j:slf4j-log4j12:1.5.10"
	compile "javax.inject:javax.inject:1"
	compile "com.h2database:h2:1.3.156"
	providedCompile ("javax.servlet:javax.servlet-api:3.0.1") { provided = true }
	providedCompile ("javax.servlet.jsp:jsp-api:2.1") { provided = true }
	compile "javax.servlet:jstl:1.2"
	testCompile "org.springframework:spring-test-mvc:1.0.0.BUILD-SNAPSHOT"
	testCompile "junit:junit:4.8.1"
	testCompile "org.mockito:mockito-all:$mockitoVersion"

  tomcat "org.apache.tomcat.embed:tomcat-embed-core:${tomcatVersion}",
         "org.apache.tomcat.embed:tomcat-embed-logging-juli:${tomcatVersion}"
  tomcat("org.apache.tomcat.embed:tomcat-embed-jasper:${tomcatVersion}") {
      exclude group: 'org.eclipse.jdt.core.compiler', module: 'ecj'
  }

}

repositories {
	mavenRepo urls: 'http://maven.springframework.org/release'
	mavenRepo urls: 'http://maven.springframework.org/milestone'
	mavenRepo urls: 'http://maven.springframework.org/snapshot'
	mavenRepo urls: 'http://download.java.net/maven/2'
	mavenCentral()
}

task wrapper(type: Wrapper) {
    gradleVersion = '1.1'
}

task lumbar(type: Exec) {
  lumbarCommandLine = ["lumbar", "build", "src/main/thorax/lumbar.json", "build/thorax"]
  commandLine lumbarCommandLine
}

war.dependsOn { lumbar }

war {
    from('build/thorax') {
        include '**' into 'resources'
    }
}

tomcatRunWar {
    contextPath = 'thorax-client'
}

buildscript {
    repositories {
        add(new org.apache.ivy.plugins.resolver.URLResolver()) {
            name = 'GitHub'
            addArtifactPattern 'http://cloud.github.com/downloads/[organisation]/[module]/[module]-[revision].[ext]'
        }
    }

    dependencies {
        classpath 'bmuschko:gradle-tomcat-plugin:0.9.5'
    }
}